default:
    # <SECRET>
    pds.host: localhost
    pds.port: 7799
    pds.database: <SECRET>
    pds.user: <SECRET>
    pds.pw: <SECRET>
    #
    rxnav.api.address: localhost
    rxnav.api.port: 4000
    #
    rxnav.mysql.user: <SECRET>
    rxnav.mysql.pw: <SECRET>
    rxnav.mysql.address: localhost
    rxnav.mysql.port: 3307
    #
    my.apikey: <SECRET>
    #
    #my.graphdb.base: 'http://pennturbo.org:7200'
    my.graphdb.base: <SECRET>
    my.selected.repo: 'med_mapping_dev'
    my.graphdb.username: <SECRET>
    my.graphdb.pw: <SECRET>
    #
    med.map.kb.solr.host: <SECRET>
    med.map.kb.solr.port: '8983'
    med.map.kb.solr.core: 'med_mapping_kb_labels'
    #
    oracle.jdbc.path: "~/ojdbc8.jar"
    mysql.jdbc.path: "~/mysql-connector-java-8.0.19.jar"
    #
    source.medications.savepath: "source_medications.txt"
    source.medications.loadpath: "source_medications.txt"
    #
    normalization.file: "med_name_normalization.csv"
    #
    min.empi.count: 10
    rxaui.asserted.strings.chunk.count: 3000
    approximate.row.count: 10000
    approximate.max.chars: 100
    tune.rf: FALSE
    train.split: 0.7
    static.ntree: 200
    static.mtry: 11
    coverage.check.fraction: 0.1
    my.pagesize: 5000
    monitor.pause.seconds: 30
    #
    med.map.kb.solr.population.sparql: |
        PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
        PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
        PREFIX obo: <http://purl.obolibrary.org/obo/>
        PREFIX oboInOwl: <http://www.geneontology.org/formats/oboInOwl#>
        prefix bp: <http://purl.bioontology.org/ontology/>
        # this is skightly inefficient becasue the harmonized label 
        #   will only be relvant for altLabel or synonyms (if we use those)
        #   OR if we start using obo:IAO_0000118 alternative terms, which so far only seem applciable to upper ontology terms
        # oboInOwl:hasExactSynonym and/or oboInOwl:hasRelatedSynonym used in ChEBI
        #   but those include formaulas, smiles, inchis
        #   might need to check the source annotation
        select
        distinct (?s as ?mediri) (?p as ?labelpred) (?normlab as ?medlabel) ?prefLabel
        where {
            values ?g {
                <http://purl.obolibrary.org/obo/chebi.owl>
                <http://purl.bioontology.org/ontology/RXNORM/>
                <http://purl.obolibrary.org/obo/dron-rxnorm.owl>
                <http://purl.bioontology.org/ontology/NDFRT/>
                <http://purl.bioontology.org/ontology/ATC/>
                <http://purl.obolibrary.org/obo/dron/dron-ingredient.owl>
                <http://purl.obolibrary.org/obo/dron/dron-upper.owl>
                <http://purl.obolibrary.org/obo/dron/dron-hand.owl>
            }
            graph ?g {
                values ?p {
                    rdfs:label  skos:prefLabel skos:altLabel
                }
                ?s ?p ?o .
                optional {
                    ?s skos:altLabel ?o .
                    ?s skos:prefLabel ?rawPrefLabel .
                    bind(lcase(str(?rawPrefLabel)) as ?prefLabel)
        #            filter(?o != ?prefLabel )
                } 
                bind(lcase(str(?o)) as ?normlab)
            }
        }
    chebi.synonym.solr.population.sparql: |
        PREFIX owl: <http://www.w3.org/2002/07/owl#>
        PREFIX oboInOwl: <http://www.geneontology.org/formats/oboInOwl#>
        PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
        select
        (?as as ?mediri) (?ap as ?labelpred) ?source (lcase(str(?at)) as ?medlabel) (lcase(str(?rawLabel)) as ?prefLabel)
        where {
            values ?ap {
                oboInOwl:hasRelatedSynonym oboInOwl:hasExactSynonym
            }
            #  oboInOwl:hasDbXref can also be used as an annotated property 
            #    (in addition to a source-attributing predicate)
            # where do "band name" assertions come from?
            values ?source {
                "EuroFIR" "Beilstein" "FooDB" "EBI_Industry_Programme" "PubChem" "VSDB" "KEGG_DRUG" "WHO_MedNet" "DrugBank"
            }
            graph <http://purl.obolibrary.org/obo/chebi.owl> {
                ?s a owl:Axiom ;
                   owl:annotatedTarget ?at ;
                   owl:annotatedProperty ?ap ;
                   oboInOwl:hasDbXref ?source ;
                   owl:annotatedSource ?as .
                ?as rdfs:label ?rawLabel .
                filter( (lcase(str(?rawLabel))) != (lcase(str(?at))))
            }
        }
    #
    target.col: "RELA"
    factor.levels: {"TTY.sr": ["AB","BD","BN","BPCK","CD","CDA","CDC","CDD","CE","DF","DFG","DP","GN","GPCK","IN","MH","MIN","MS","MTH_RXN_BD","MTH_RXN_CD","MTH_RXN_CDC","MTH_RXN_DP","NM","PCE","PEP","PIN","PSN","RXN_IN","RXN_PT","SBD","SBDC","SBDF","SC","SCD","SCDC","SCDF","SY"], "SAB.sr": ["ATC","CVX","DRUGBANK","GS","MMSL","MMX","MSH","MTHSPL","NDDF","RXNORM","USP","VANDF"], "RELA": ["consists_of","constitutes","contained_in","contains","form_of","has_form","has_ingredient","has_part","has_quantified_form","has_tradename","identical","ingredient_of","inverse_isa","isa","more distant","part_of","quantified_form_of","tradename_of"]}
    important.features: ["TTY.sr","rank","jw","cosine","jaccard","q.char","qgram","rxcui.freq","score"]
    testing.confusion.writepath: "rxnav_medication_mapping_confusion.csv"
    rf.model.savepath: "rxnav_med_mapping_rf.Rdata"
    rf.model.loadpath: "rxnav_med_mapping_rf.Rdata"
    allowed.synonym.sources: RXNORM
    excluded.term.types:
        - ET
        - FN
        - FSY
        - N1
        - PM
        - PT
        - PTGB
        - SBDG
        - SCDG
        - SU
        - SYGB
        - TMSY
    final.predictions.writepath: "rxnav_medication_mapping_final_predictions.csv"
    my.source.ontolgies:
        - 'ATC'
        - 'CHEBI'
        - 'DRON'
        - 'NDFRT'
        - 'RXNORM'
    relevant.ontologies:
        - 'ATC'
        - 'CHEBI'
        - 'DRON'
        - 'NDFRT'
        - 'RXNORM'
    aceepted.mapping.sources:
        - 'CUI'
        - 'LOOM'
    bioportal.triples.destination: 'med_mapping_bioportal_mapping.ttl'
    my.import.urls: {"http://purl.obolibrary.org/obo/dron.owl":{"url":["https://bitbucket.org/uamsdbmi/dron/raw/master/dron-full.owl"],"format":[""]},
    "http://purl.obolibrary.org/obo/dron/dron-hand.owl":{"url":["https://bitbucket.org/uamsdbmi/dron/raw/master/dron-hand.owl"],"format":[""]},
    "http://purl.obolibrary.org/obo/dron/dron-upper.owl":{"url":["https://bitbucket.org/uamsdbmi/dron/raw/master/dron-upper.owl"],"format":[""]},
    "https://raw.githubusercontent.com/PennTURBO/Turbo-Ontology/master/ontologies/turbo_merged.owl":{"url":["https://raw.githubusercontent.com/PennTURBO/Turbo-Ontology/master/ontologies/turbo_merged.owl"],"format":[""]},
    "http://purl.obolibrary.org/obo/dron/dron-ingredient.owl":{"url":["https://s3.amazonaws.com/drugontology/dron-ingredient.owl"],"format":[""]},
    "http://purl.obolibrary.org/obo/dron-rxnorm.owl":{"url":["https://s3.amazonaws.com/drugontology/dron-rxnorm.owl"],"format":[""]}}
    my.import.files: {"http://purl.bioontology.org/ontology/ATC/":{"local.file":["/Users/markampa/med_mapping/extras/ATC.ttl"],"format":["text/turtle"]},
    "http://purl.bioontology.org/ontology/NDFRT/":{"local.file":["/Users/markampa/med_mapping/extras/NDFRT.ttl"],"format":["text/turtle"]},
    "http://purl.obolibrary.org/obo/chebi.owl":{"local.file":["/Users/markampa/med_mapping/extras/chebi.owl.gz"],"format":["application/rdf+xml"]},
    "http://example.com/resource/bioportal_mappings":{"local.file":["/Users/markampa/med_mapping/med_mapping_bioportal_mapping.ttl"],"format":["text/turtle"]},
    "http://example.com/resource/reference_medications":{"local.file":["/Users/markampa/med_mapping/reference_medications_from_robot.ttl"],"format":["text/turtle"]},
    "http://example.com/resource/classified_search_results":{"local.file":["/Users/markampa/med_mapping/classified_search_results_from_robot.ttl"],"format":["text/turtle"]},
    "http://purl.bioontology.org/ontology/RXNORM/":{"local.file":["/Users/markampa/med_mapping/extras/RXNORM.ttl.gz"],"format":["text/turtle"]}}
    materializastion.projection.sparqls:
        turbo_med_mapping_hand: |
            PREFIX owl: <http://www.w3.org/2002/07/owl#>
            insert data {
                graph <http://example.com/resource/turbo_med_mapping_hand> {
                    <http://example.com/resource/reference_medications> a owl:Ontology .
                    <http://example.com/resource/classified_search_results> a owl:Ontology .
                    <http://purl.obolibrary.org/obo/dron/dron-rxnorm.owl> a owl:Ontology .
                    <http://example.com/resource/bioportal_mappings> a owl:Ontology .
                }
            }
        deleteUselessNamedIndAssertions: |
            delete {
                ?s a <http://www.w3.org/2002/07/owl#NamedIndividual>
            } where {
                {
                    graph <http://example.com/resource/classified_search_results> {
                        ?s a <http://www.w3.org/2002/07/owl#NamedIndividual>
                    }
                } union  {
                    graph <http://example.com/resource/reference_medications> {
                        ?s a <http://www.w3.org/2002/07/owl#NamedIndividual>
                    }
                }
            }
        reference_medications_labels: |
            PREFIX obo: <http://purl.obolibrary.org/obo/>
            PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
            insert {
                graph <http://example.com/resource/reference_medications_labels> {
                    ?s rdfs:label ?bound .
                }
            }
            where {
                graph <http://example.com/resource/reference_medications> {
                    ?s a obo:PDRO_0000024 ;
                       <http://example.com/resource/source_full_name> ?source_full_name .
                    bind(concat(replace(str(?s), "http://example.com/resource/source_med_id/", ""), "|", ?source_full_name ) as ?bound)
                }
            }
        classifications_labels: |
            PREFIX obo: <http://purl.obolibrary.org/obo/>
            PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
            insert {
                graph <http://example.com/resource/classifications_labels> {
                    ?s rdfs:label ?bound .
                }
            }
            where {
                graph <http://example.com/resource/classified_search_results> {
                    ?s a obo:OBI_0001909 ;
                       <http://example.com/resource/query_val> ?query_val .
                    bind(concat(?query_val, "|", replace(str(?s), "http://example.com.resource/", "")) as ?bound)
                }
            }
        defined_in: |
            PREFIX owl: <http://www.w3.org/2002/07/owl#>
            insert {
                graph <http://example.com/resource/defined_in> {
                    ?s <http://example.com/resource/defined_in> ?g .
                }
            }
            where {
                graph ?g {
                    ?s a ?c .
                    filter (isuri(?s))
                }
                #    ?c a owl:Class
            }
        materialized_rxcui: |
            PREFIX obo: <http://purl.obolibrary.org/obo/>
            insert {
                graph <http://example.com/resource/materialized_rxcui> {
                    ?s <http://example.com/resource/materialized_rxcui> ?concat
                }
            } where {
                {
                    graph <http://purl.obolibrary.org/obo/dron/dron-ingredient.owl>
                    {
                        ?s obo:DRON_00010000 ?o .
                    }
                }
                union
                {
                    graph <http://purl.obolibrary.org/obo/dron/dron-rxnorm.owl>
                    {
                        ?s obo:DRON_00010000 ?o .
                    }
                }
                bind(uri(concat("http://purl.bioontology.org/ontology/RXNORM/",?o)) as ?concat)
            }
        transitively_materialized_dron_ingredient: |
            PREFIX obo: <http://purl.obolibrary.org/obo/>
            PREFIX owl: <http://www.w3.org/2002/07/owl#>
            PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
            PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
            PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
            PREFIX ro: <http://www.obofoundry.org/ro/ro.owl#>
            insert {
                graph <http://example.com/resource/transitively_materialized_dron_ingredient> {
                    ?dronsubprod <http://example.com/resource/transitively_materialized_dron_ingredient> ?droning .
                }
            }
            where {
                graph <http://purl.obolibrary.org/obo/dron/dron-ingredient.owl> {
                    ?s a owl:Restriction ;
                       owl:someValuesFrom ?droning ;
                       owl:onProperty obo:BFO_0000071 .
                    ?bt1 rdf:first ?s ;
                         rdf:rest rdf:nil .
                    ?bt2f a owl:Restriction ;
                          owl:onProperty obo:BFO_0000053 ;
                          owl:someValuesFrom obo:DRON_00000028 .
                    ?bt2 rdf:rest ?bt1 ;
                         rdf:first ?bt2f .
                    ?bt3 rdf:rest ?bt2 ;
                         rdf:first obo:OBI_0000576 .
                    ?bt4 owl:intersectionOf ?bt3 ;
                         rdf:type owl:Class .
                    ?bt5 owl:someValuesFrom ?bt4 ;
                         rdf:type owl:Restriction ;
                         owl:onProperty ro:has_proper_part .
                    ?dronprod rdfs:subClassOf ?bt5 ;
                              a owl:Class .
                }
                ?dronsubprod rdfs:subClassOf* ?dronprod
            }
        transitively_materialized_drugrole: |
            PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
            insert {
                graph <http://example.com/resource/transitively_materialized_drugrole> {
                    ?nextdrugrole <http://example.com/resource/transitively_materialized_drugrole> ?subdrugrole .
                }
                
            } where {
                ?subdrugrole rdfs:subClassOf* <http://purl.obolibrary.org/obo/CHEBI_23888> .
                ?nextdrugrole rdfs:subClassOf* ?subdrugrole .
            }
        transitive_role_of_class: |
            PREFIX owl: <http://www.w3.org/2002/07/owl#>
            PREFIX obo: <http://purl.obolibrary.org/obo/>
            PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
            insert {
                graph <http://example.com/resource/transitive_role_of_class> {
                    ?chebidrugsubclass <http://example.com/resource/transitive_role_of_class> ?superrole .
                }
            } where {
                graph <http://example.com/resource/transitively_materialized_drugrole> {
                    ?drugrole <http://example.com/resource/transitively_materialized_drugrole>* ?superrole .
                }
                graph obo:chebi.owl {
                    ?restr a owl:Restriction ;
                           owl:someValuesFrom ?drugrole ;
                           owl:onProperty obo:RO_0000087 .
                    ?chebidrugclass rdfs:subClassOf ?restr .
                    ?chebidrugsubclass rdfs:subClassOf* ?chebidrugclass .
                    filter(isuri(?chebidrugsubclass))
                }
            }
        transitive_massless_rolebearer: |
            PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
            PREFIX : <http://purl.obolibrary.org/obo/dron.owl#>
            insert {
                graph <http://example.com/resource/transitive_massless_rolebearer> {
                        ?chebinextsub <http://example.com/resource/transitive_massless_rolebearer> ?chebidrugclass .
                }

            }
            where {
                graph <http://example.com/resource/transitive_role_of_class> {
                    ?chebidrugclass <http://example.com/resource/transitive_role_of_class> ?chebirole .
                }
                minus {
                    graph <http://purl.obolibrary.org/obo/chebi.owl> {
                        ?chebidrugclass <http://purl.obolibrary.org/obo/chebi/mass> ?mass .
                    }
                }
                graph <http://purl.obolibrary.org/obo/chebi.owl> {
                    ?chebidrugsubclass rdfs:subClassOf* ?chebidrugclass .
                    ?chebinextsub rdfs:subClassOf* ?chebidrugsubclass .
                }
            }
        materialize_cuis: |
            insert {
                graph <http://example.com/resource/cui> {
                    ?materialized a <http://purl.obolibrary.org/obo/IAO_0000578> ;
                                  <http://purl.obolibrary.org/obo/IAO_0000219> ?s .
                }
            }
            where {
                ?s <http://bioportal.bioontology.org/ontologies/umls/cui> ?cui .
                bind(uri(concat("http://example.com/resource/cui/",?cui)) as ?materialized )
            }
        fewer_directer_mappings: |
            PREFIX mydata: <http://example.com/resource/>
            PREFIX obo: <http://purl.obolibrary.org/obo/>
            insert {
                graph mydata:elected_mapping {
                    ?wasinner mydata:elected_mapping ?outermrxc
                }
            }
            where 
            {
                {
                    select
                    (?innersm as ?wasinner) ?outermrxc ?innerpimax (sum(?outerpi) as ?outersum) 
                    where {
                        graph mydata:classified_search_results {
                            ?doublecheck mydata:source_id_uri ?innersm ;
                                         mydata:prob_identical ?outerpi ;
                                         mydata:match_rxcui ?outermrxc .
                        }
                        {
                            select (?sourcemed as ?innersm) (max(?pisum) as ?innerpimax) 
                            where
                            {
                                select ?sourcemed ?match_rxcui (sum( ?prob_identical ) as ?pisum)
                                where {
                                    graph mydata:reference_medications {
                                        ?sourcemed a obo:PDRO_0000024 ;
                                                   mydata:source_count ?source_count .
                                    }
                                    graph mydata:classified_search_results {
                                        ?classified_search_result mydata:source_id_uri ?sourcemed ;
                                                                  mydata:prob_more_distant ?prob_more_distant ;
                                                                  mydata:prob_identical ?prob_identical ;
                                                                  mydata:match_rxcui ?match_rxcui .
                                    }
                                }
                                group by ?sourcemed ?match_rxcui
                                order by desc (sum( ?prob_identical ))
                            }
                            group by ?sourcemed 
                        }
                    }
                    group by ?innersm ?innerpimax ?outermrxc
                }
                filter(?innerpimax = ?outersum) 
            }
        standalone_srouce_med_ids: |
            PREFIX mydata: <http://example.com/resource/>
            PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
            PREFIX obo: <http://purl.obolibrary.org/obo/>
            PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
            insert {
                graph <http://example.com/resource/source_med_id/> {
                    ?s skos:notation ?extracted_id
                }
            } 
            where {
                graph mydata:reference_medications {
                    ?s a obo:PDRO_0000024 .
                }
                bind(strafter(str(?s),"http://example.com/resource/source_med_id/") as ?extracted_id)
        }
    per.task.columns: 'med_map_csv_cols.csv'
    tasks:
        - reference_medications
        - classified_search_results
reference_medications:
    current.file.base.name: 'reference_medications'
    my.numericals:
        - source_count
    my.class: 'http://purl.obolibrary.org/obo/PDRO_0000024'
classified_search_results:
    current.file.base.name: 'classified_search_results'
    my.numericals:
        - match_chars
        - match_words
        - query_chars
        - query_words
        - match_rank
        - match_rxaui
        - match_score
        - prob_consists_of
        - prob_constitutes
        - prob_contained_in
        - prob_contains
        - prob_form_of
        - prob_has_form
        - prob_has_ingredient
        - prob_has_part
        - prob_has_quantified_form
        - prob_has_tradename
        - prob_identical
        - prob_ingredient_of
        - prob_inverse_isa
        - prob_isa
        - prob_more_distant
        - prob_part_of
        - prob_quantified_form_of
        - prob_tradename_of
        - rxaui_freq
        - rxcui_freq
        - sd_cosine
        - sd_jaccard
        - sd_jw
        - sd_lcs
        - sd_lv
        - sd_qgram
    my.class: 'http://purl.obolibrary.org/obo/OBI_0001909'

